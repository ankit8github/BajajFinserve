import React, { useState } from 'react';
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Select, SelectItem } from "@/components/ui/select";

export default function App() {
  const [inputData, setInputData] = useState('');
  const [responseData, setResponseData] = useState(null);
  const [selectedOptions, setSelectedOptions] = useState([]);
  const [error, setError] = useState('');

  const handleSubmit = async () => {
    try {
      setError('');
      const parsedData = JSON.parse(inputData);
      if (!parsedData.data || !Array.isArray(parsedData.data)) {
        throw new Error('Invalid JSON format');
      }
      
      const response = await fetch("https://your-backend-url.com/bfhl", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(parsedData),
      });

      const data = await response.json();
      setResponseData(data);
    } catch (err) {
      setError(err.message || 'Something went wrong');
    }
  };

  return (
    <div className="flex flex-col items-center p-6">
      <h1 className="text-xl font-bold mb-4">ABCD123</h1>
      <textarea 
        className="border p-2 w-96 h-24" 
        placeholder='{"data": ["A", "B", "C", "1", "2"]}'
        value={inputData} 
        onChange={(e) => setInputData(e.target.value)} 
      />
      <Button onClick={handleSubmit} className="mt-4">Submit</Button>
      {error && <p className="text-red-500 mt-2">{error}</p>}
      {responseData && (
        <Card className="mt-4 w-96">
          <CardContent>
            <Select multiple onChange={(values) => setSelectedOptions(values)}>
              <SelectItem value="alphabets">Alphabets</SelectItem>
              <SelectItem value="numbers">Numbers</SelectItem>
              <SelectItem value="highest_alphabet">Highest Alphabet</SelectItem>
            </Select>
            <div className="mt-4">
              {selectedOptions.includes("alphabets") && (
                <p><strong>Alphabets:</strong> {JSON.stringify(responseData.alphabets)}</p>
              )}
              {selectedOptions.includes("numbers") && (
                <p><strong>Numbers:</strong> {JSON.stringify(responseData.numbers)}</p>
              )}
              {selectedOptions.includes("highest_alphabet") && (
                <p><strong>Highest Alphabet:</strong> {JSON.stringify(responseData.highest_alphabet)}</p>
              )}
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
