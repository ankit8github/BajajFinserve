const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');

const app = express();
const PORT = process.env.PORT || 5000;

app.use(cors());
app.use(bodyParser.json());

// POST /bfhl endpoint
app.post('/bfhl', (req, res) => {
    try {
        const { data } = req.body;
        if (!Array.isArray(data)) {
            return res.status(400).json({ is_success: false, message: 'Invalid input format' });
        }

        // Separate numbers and alphabets
        const numbers = data.filter(item => !isNaN(item));
        const alphabets = data.filter(item => /^[a-zA-Z]$/.test(item));
        
        // Find highest alphabet (case insensitive)
        const highest_alphabet = alphabets.length > 0 ? [alphabets.sort((a, b) => b.localeCompare(a, 'en', { sensitivity: 'base' }))[0]] : [];

        const response = {
            is_success: true,
            user_id: "john_doe_17091999", // Replace with actual user logic
            email: "john@xyz.com", // Replace with actual email
            roll_number: "ABCD123", // Replace with actual roll number
            numbers,
            alphabets,
            highest_alphabet
        };
        res.json(response);
    } catch (error) {
        res.status(500).json({ is_success: false, message: 'Server error' });
    }
});

// GET /bfhl endpoint
app.get('/bfhl', (req, res) => {
    res.json({ operation_code: 1 });
});

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});
